{
	"info": {
		"_postman_id": "257ac2fc-7b12-4551-a698-d8aa0403f704",
		"name": "User Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Service does not give error', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 500ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"    pm.expect(jsonData.data).to.have.property('token');\r",
									"    pm.expect(jsonData.data.token).to.be.an('string');\r",
									"    pm.expect(jsonData.data).to.have.property('user');\r",
									"    pm.expect(jsonData.data).to.have.property('role');\r",
									"\r",
									"\r",
									"    pm.collectionVariables.set(\"token\", jsonData.data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"adrian@mail.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/auth/login",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Invalid credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function(){\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test('Status code is not 200', function(){\r",
									"    pm.response.to.not.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 500ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.have.property('message');\r",
									"    pm.expect(jsonData.error.message).to.be.an('string');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"wrong@mail.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/auth/login",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Invalid request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test('Status code is not 200', function(){\r",
									"    pm.response.to.not.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 500ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.have.property('message');\r",
									"    pm.expect(jsonData.error.message).to.be.an('string');\r",
									"    pm.expect(jsonData.error).to.have.property('detail');\r",
									"    pm.expect(jsonData.error.detail).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"NotAnEmail\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/auth/login",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Users",
			"item": [
				{
					"name": "Get All Users - Complete filters - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Service does not give error', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 500ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"    pm.expect(jsonData.data).to.have.property('docs');\r",
									"    pm.expect(jsonData.data.docs).to.be.an('array');\r",
									"    pm.expect(jsonData.data).to.have.property('totalDocs');\r",
									"    pm.expect(jsonData.data.totalDocs).to.be.an('number');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{basepath}}/users?filter[name]=Rita&filter[email]=rita@mail.com&options[limit]=10&options[offset]=0&filter[lastName]=Del Toro",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "filter[name]",
									"value": "Rita"
								},
								{
									"key": "filter[email]",
									"value": "rita@mail.com"
								},
								{
									"key": "options[limit]",
									"value": "10"
								},
								{
									"key": "options[offset]",
									"value": "0"
								},
								{
									"key": "filter[lastName]",
									"value": "Del Toro"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users - Withput Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function(){\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test('Service does not give error', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 500ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.have.property('message');\r",
									"    pm.expect(jsonData.error.message).to.be.an('string');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{basepath}}/users?filter[name]=Rita&filter[email]=rita@mail.com&options[limit]=10&options[offset]=0&filter[lastName]=Del Toro",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "filter[name]",
									"value": "Rita"
								},
								{
									"key": "filter[email]",
									"value": "rita@mail.com"
								},
								{
									"key": "options[limit]",
									"value": "10"
								},
								{
									"key": "options[offset]",
									"value": "0"
								},
								{
									"key": "filter[lastName]",
									"value": "Del Toro"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Save User",
			"item": [
				{
					"name": "Save User - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test('Service does not give error', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 1000ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"    pm.expect(jsonData.data).to.have.property('role');\r",
									"    pm.expect(jsonData.data.role).to.be.an('string');\r",
									"    pm.expect(jsonData.data).to.have.property('enable');\r",
									"    pm.expect(jsonData.data.enable).to.be.an('boolean');\r",
									"\r",
									"\r",
									"    pm.collectionVariables.set(\"userId\", jsonData.data._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"adrian\",\r\n    \"lastName\": \"sanchez\",\r\n    \"email\": \"{{randomNumber}}@mail.com\",\r\n    \"birthdate\": \"12/24/1980\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/users",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save User - Failure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test('Status code is not 500', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 1000ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.have.property('message');\r",
									"    pm.expect(jsonData.error.message).to.be.an('string');\r",
									"    pm.expect(jsonData.error).to.have.property('detail');\r",
									"    pm.expect(jsonData.error.detail).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"adrian\",\r\n    \"lastName\": \"sanchez\",\r\n    \"email\": \"rita@mail.com\",\r\n    \"birthdate\": \"12/24/1980\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/users",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Update User - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Service does not give error', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 1000ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"    pm.expect(jsonData.data).to.have.property('role');\r",
									"    pm.expect(jsonData.data.role).to.be.an('string');\r",
									"    pm.expect(jsonData.data).to.have.property('enable');\r",
									"    pm.expect(jsonData.data.enable).to.be.an('boolean');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Adrian\",\r\n    \"lastName\": \"Sanchez\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/users/:id",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - Failure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test('Status code is not 500', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 1000ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.have.property('message');\r",
									"    pm.expect(jsonData.error.message).to.be.an('string');\r",
									"    pm.expect(jsonData.error).to.have.property('detail');\r",
									"    pm.expect(jsonData.error.detail).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Adrian\",\r\n    \"lastName\": \"Sanchez\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/users/:id",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "abc123"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete User",
			"item": [
				{
					"name": "Delete User - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Service does not give error', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 1000ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"    pm.expect(jsonData.data).to.have.property('role');\r",
									"    pm.expect(jsonData.data.role).to.be.an('string');\r",
									"    pm.expect(jsonData.data).to.have.property('enable');\r",
									"    pm.expect(jsonData.data.enable).to.be.an('boolean');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/users/:id",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User - Failure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test('Status code is not 500', function(){\r",
									"    pm.response.to.not.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test('Response time is less than 1000ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Response is json', function(){\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Respones have correct properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.have.property('message');\r",
									"    pm.expect(jsonData.error.message).to.be.an('string');\r",
									"    pm.expect(jsonData.error).to.have.property('detail');\r",
									"    pm.expect(jsonData.error.detail).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{basepath}}/users/:id",
							"host": [
								"{{basepath}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "abc123"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "randomNumber",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}